<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>3S21P 18650 Battery Backup</title>
    <url>/2023/05/02/3S21P-18650-Battery-Backup/</url>
    <content><![CDATA[<p>I am cleaning out my fridge :) and have had these 18650s in there for a while so I am using them to create a 12 volt power supply.</p>
<p>This is a battery I will be using for a cellular signal amplifier and also used to charge my cell phone, laptop, and Lipos while out in the field - middle of nowhere. It is built from leftover 18650s from a 3.0 kWh build I did a few years ago so these have just been sitting in my fridge. Each averages ~1800 mAh so I should be able to produce 420 Wh from a full charge. I plan on charging with a 100 watt solar panel while out in the field.</p>
<p>Long story short:<br>The positive from the protection board goes to the fuse then through the switch then to the positive ends of 12v socket, quick charge socket, the voltmeter, and the xt60 - all soldered together and head shrink wrapped. </p>
<p>The negative side goes from the projection board to the negative ends of 12v socket, quick charge socket, the voltmeter, and the xt60. So the same with the positive but the fuse and switch aren&#39;t involved.</p>
<p>The material links can be found on the Thingiverse&#x2F;YouTube links below.</p>
<p>The STLs for the project <a href="https://www.thingiverse.com/thing:6003895">https://www.thingiverse.com/thing:6003895</a></p>
<img src="/2023/05/02/3S21P-18650-Battery-Backup/1git.jpg" class="">
<img src="/2023/05/02/3S21P-18650-Battery-Backup/2git.jpg" class="">
<img src="/2023/05/02/3S21P-18650-Battery-Backup/3git.jpg" class="">

<iframe width="360" height="240" src="https://www.youtube.com/embed/WIsmeS5GjXg" title="(no sound) Build Remote Power Source Laptop/Lipo/Phone Charger 3S21P 18650" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
]]></content>
      <tags>
        <tag>fusion360</tag>
        <tag>18650s</tag>
        <tag>3dmodeling</tag>
      </tags>
  </entry>
  <entry>
    <title>Storing Power for Outages/Camping</title>
    <url>/2022/01/01/3-0-kWh-Solar-Generator/</url>
    <content><![CDATA[<p>This project was from the beginning of 2021. It took around 40 hours over a few months. It can store around 3 kWhs and has a max output of 2500 watts peak&#x2F;1500 watts continuous. It can run a campsite and be charged off of a laptop charger or solar panels&#x2F;wind generator – anything that produces between 12 and 48 volts of power.</p>
<p>Most of the project is based on <a href="https://youtu.be/PVnQ87Fvsk4">LithiumSolar&#39;s video</a>.</p>
<p>Recycled 2200 mAh modem cells were sourced from <a href="batteryhookup.com">batteryhookup.com</a>. I&#39;ve sourced some 2600 mAh cells but not the 364 required for this project. The total storage of the generator ended up being a little less than 3.0 kWh after testing all cells.</p>
<table>
<thead>
<tr>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/1.jpg" class=""></th>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/2.jpg" class=""></th>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/10.jpg" class=""></th>
</tr>
</thead>
</table>
<p>A kWeld was used for spot welding. 4P nickel strip was sourced to simplify connections for each parallel group.</p>
<table>
<thead>
<tr>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/4.jpg" class=""></th>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/5.jpg" class=""></th>
<th><img src="/2022/01/01/3-0-kWh-Solar-Generator/6.jpg" class=""></th>
</tr>
</thead>
<tbody><tr>
<td><img src="/2022/01/01/3-0-kWh-Solar-Generator/7.jpg" class=""></td>
<td><img src="/2022/01/01/3-0-kWh-Solar-Generator/11.jpg" class=""></td>
<td><img src="/2022/01/01/3-0-kWh-Solar-Generator/8.jpg" class=""></td>
</tr>
</tbody></table>
<img src="/2022/01/01/3-0-kWh-Solar-Generator/9.jpg" class="">]]></content>
      <tags>
        <tag>18650s</tag>
        <tag>solar</tag>
        <tag>bms</tag>
      </tags>
  </entry>
  <entry>
    <title>Build Inkbird PID Kit from Amazon</title>
    <url>/2022/11/21/Build-Inkbird-PID-Kit-from-Amazon/</url>
    <content><![CDATA[<p>Purchased <a href="https://www.amazon.com/gp/product/B08Y8GX1WT">this Amazon kit</a> to control the temperature of a  1500 watt smoker. I&#39;ve tried other off the shelf controllers but the max temperature is too low and it&#39;s not easy to adjust the temperature.</p>
<p>Here is a link to <a href="https://www.thingiverse.com/thing:5647742">the chassis model</a>.</p>
<img src="/2022/11/21/Build-Inkbird-PID-Kit-from-Amazon/inside.jpg" class="">

<iframe width="480" height="240" src="https://www.youtube.com/embed/m8Bwifxe91g" title="Amazon Inkbird PID Kit Model" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      <tags>
        <tag>fusion360</tag>
        <tag>pid</tag>
        <tag>sensors</tag>
        <tag>temperature</tag>
      </tags>
  </entry>
  <entry>
    <title>Monitoring CO2 Levels in Apartment or Car</title>
    <url>/2022/01/02/CO2-Monitor/</url>
    <content><![CDATA[<p>Inspiration for this project was <a href="https://makezine.com/fresh-air/">Makezine article and blog post &quot;Fresh Air&quot;</a> and <a href="https://learn.adafruit.com/adafruit-scd30">Adafruit&#39;s SCD-30 sensor page</a>.</p>
<p>A lot of interest in indoor CO2 monitoring was sparked by a professor that built a CO2 monitor for his classroom. He found that the CO2 levels at the end of class were enough to make you groggy&#x2F;sleepy and therefore not able to learn as well.</p>
<p>In my experimentation, an interesting discovery was the elevation of CO2 levels in a short drive with the windows up. My car, a Nissan Sentra, approached 2000 ppm in a one-person 30-minute commute. Having one window down @55 mph (90 kph) for a minute brought the levels back to below 1000 ppm.</p>
<img src="/2022/01/02/CO2-Monitor/1.jpg" class="">
]]></content>
      <tags>
        <tag>sensors</tag>
        <tag>co2</tag>
        <tag>microcontrollers</tag>
      </tags>
  </entry>
  <entry>
    <title>Animated Heat Map Over Time</title>
    <url>/2023/05/21/Heat-Map-Over-Time/</url>
    <content><![CDATA[<p>This is a random project “How to animate a heat map with date slider bar”</p>
<p>Lots of issues cropped up. Mostly from getting out of the swing of how to use pandas and different data structures&#x2F;amending them when certain conditions are met.</p>
<p>This will be more useful once labels are added to the coordinates. I&#39;ve worked in labels but it slows down Jupyter a lot and needs more work.</p>
<a href="/2023/05/21/Heat-Map-Over-Time/heatmap.html" title="&gt;&gt;&gt;Heat Map&lt;&lt;&lt;">&gt;&gt;&gt;Heat Map&lt;&lt;&lt;</a> <br>

<a href="/2023/05/21/Heat-Map-Over-Time/data.txt" title="from this CSV file">from this CSV file</a><br><br>



<pre><code>import folium
import folium.plugins as plugins
import numpy as np

from datetime import datetime, timedelta
import pandas as pd

# Read the data from the CSV file
df = pd.read_csv(&#39;data.csv&#39;)

# Convert the date columns to the appropriate data type
df[&#39;start_date&#39;] = pd.to_datetime(df[&#39;start_date&#39;])
df[&#39;end_date&#39;] = pd.to_datetime(df[&#39;end_date&#39;])

# Initialize a dictionary to store the data
data_dict = &#123;&#125;

# Iterate over each row in the DataFrame
for index, row in df.iterrows():
    start_date = row[&#39;start_date&#39;]
    end_date = row[&#39;end_date&#39;]
    latitude = row[&#39;latitude&#39;]
    longitude = row[&#39;longitude&#39;]

    # Generate a list of dates between the start and end date
    dates = pd.date_range(start=start_date, end=end_date, freq=&#39;D&#39;)

    # Create a row for each date and append it to the data dictionary
    for date in dates:
        date_str = date.date().isoformat()
        coordinates = [latitude, longitude]
        if date_str in data_dict:
            data_dict[date_str].append(coordinates)
        else:
            data_dict[date_str] = [coordinates]

# Convert the data dictionary to a list of lists
data = [[date, coordinates] for date, coordinates in data_dict.items()]

# Create a new DataFrame from the data list
new_df = pd.DataFrame(data, columns=[&#39;date&#39;, &#39;coordinates&#39;])

date_list = new_df[&#39;date&#39;].values.tolist()
coordinate_list = new_df[&#39;coordinates&#39;].values.tolist()

# Save the DataFrame to a CSV file
new_df.to_csv(&#39;output.csv&#39;, index=False)

map_data = coordinate_list
time_index = date_list

m = folium.Map(location=[center_lat, center_lon], zoom_start=10)
hm = plugins.HeatMapWithTime(map_data, index=time_index, auto_play=True, max_opacity=.5, radius=30)
hm.add_to(m)
m.save(&#39;heatmap.html&#39;)
m
</code></pre>
<img src="/2023/05/21/Heat-Map-Over-Time/heatmap.jpg" class="">]]></content>
      <tags>
        <tag>python</tag>
        <tag>maps</tag>
        <tag>heatmap</tag>
        <tag>folium</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Create Real Estate Heat Map</title>
    <url>/2023/01/22/Create-Real-Estate-Heat-Map/</url>
    <content><![CDATA[<p>This project will assist in wrapping my head around the real estate prices near me and also proof of concept for creating high-utility maps.</p>
<p>This project uses a .txt file with html stored in it, I did it this way to avoid using a robot to collect price data. From the HTML the script finds address, sqft, and price info.</p>
<p>The script then uses geopy.geocoders Nominatim to get coordinates for the addresses. I had to remove the city name to make the addresses more generic otherwise I get a few NoneTypes for addresses that couldn&#39;t be resolved.</p>
<blockquote>
<pre><code>   address = address_elements[i].text
   address = address.replace(&quot;Manor, TX&quot;, &quot;,&quot;)
   address = address.replace(&quot;Austin, TX&quot;, &quot;,&quot;)
   location = geolocator.geocode(address)
</code></pre>
</blockquote>
<p>This stores the address, sqft, price, and coordinates into a text file. The file is used in the next function to generate the visual.</p>
<p>I used this code to generate the heatmap</p>
<blockquote>
<pre><code>   plugins.HeatMap(data, name=&#39;Price Heatmap&#39;,
   overlay=True, control=False,
   show=True,min_opacity=0.2,
   min_val=min(data, key=lambda x: x[2])[2],
   gradient=&#123;0.2: &#39;blue&#39;, 0.4: &#39;lime&#39;, 0.6: &#39;orange&#39;, 1: &#39;red&#39;&#125;
   ).add_to(m)
   
   m.save(&quot;heatmap2.html&quot;)
</code></pre>
</blockquote>
<p>Python makes it possible to synergize a lot of features into a few lines of code. There is a lot more I can work into this project. I&#39;m looking to make the heat map where to help visualize price alone <u><b>rather than for-sale-density and price.</b></u> This will be tricky since the house only accounts for an acre or so on the map so getting the right gradient calculation that extrapolates price over areas without data in an insightful way. I also want to work in my subjective $ value of the commute to work, sqft of workshop area (garage&#x2F;shed), foundation&#x2F;soil, and efficiency&#x2F;maintainability. All these rely on my being able to find the data for the property.</p>
<p>Challenge accepted.</p>
<img src="/2023/01/22/Create-Real-Estate-Heat-Map/1.jpg" class="">]]></content>
      <tags>
        <tag>python</tag>
        <tag>maps</tag>
        <tag>heatmap</tag>
        <tag>folium</tag>
        <tag>beautifulsoup</tag>
        <tag>geopy</tag>
        <tag>nominatim</tag>
      </tags>
  </entry>
  <entry>
    <title>Learn 3D Modeling for Drone Build</title>
    <url>/2022/11/21/Learn-Drone-Building-and-3D-Modeling/</url>
    <content><![CDATA[<p>A few of my projects have been held back because the cost of a chassis would double the project cost and there aren&#39;t dependable&#x2F;customizable solutions for small and quick electronics projects that need a case. I&#39;ve used FDM printing to get roughly what I need but the time modeling spans hours and I don&#39;t feel like I&#39;m using Fusion 360 to its full potential.</p>
<p>I decided to take <a href="https://www.coursera.org/specializations/cad-design-digital-manufacturing">CAD and Digital Manufacturing on Coursera</a>. The specialization deals with building a drone frame for Nylon printing.</p>
<p>The STLs for the project <a href="https://www.thingiverse.com/thing:5810830">https://www.thingiverse.com/thing:5810830</a></p>
<p><u>Issues that cropped up during this project:</u><ol></p>
<li>The course looks to be from around 2018. FPV quadcopters have come a long way so sourcing parts was difficult for a novice. I ended up with parts with poor documentation</li>
<li>The model is too large for a typical 3d printer to print so it had to be broken into several parts (see Fusion snip below)</li>
<li>Nylon is not a very good material for drone frames. It flexes a lot and is heavy relative to strength. The frame flexing also makes it more difficult for the flight controller to assign thrust</li>
<li>The component tray model could not fit two 4S LiPos so it was redesigned</li></ol>

<img src="/2022/11/21/Learn-Drone-Building-and-3D-Modeling/fusion360model.jpg" class="">

<p>It ended up flying. I think a voltage drop ended up crashing the flight controller making it unresponsive to remote control and the drone started drifting to the unknown. Luckily it hit a power line and I was able to recover it.<iframe width="480" height="240" src="https://www.youtube.com/embed/XV6d9KvX41s" title="Drone First Flight" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
]]></content>
      <tags>
        <tag>fusion360</tag>
        <tag>3dmodeling</tag>
        <tag>coursera</tag>
        <tag>lipos</tag>
        <tag>drone</tag>
      </tags>
  </entry>
  <entry>
    <title>Upgrade/Repair Ender 3</title>
    <url>/2023/10/26/Upgrade-Repair-Ender-3/</url>
    <content><![CDATA[<p>My 3D printer&#x2F;‘s power supply failed and made the mainboard unstable, started blowing breaker (I think false arc faults from EMI) so both needed to be replaced. Since I’m was taking the machine apart and making changes I decided to overhaul a few things and upgrades others.</p>
<p>Project Punch List:</p>
<p><u>Essential:</u><ol></p>
<li>Replaced mainboard and power supply</li>
<li>Modelled a new chassis to for components and new power supply ([link to model](https://www.thingiverse.com/thing:6283887))</li>
<li>Grounded main frame, X axis & gantry, and heatbed</li>
<li>Replaced poorly designed dual extruder - the steel teeth dug into the aluminum</li></ol>

<p><u>Upgrades:</u><ol></p>
<li>Installed Dual Z axis and switched to 2mm pitch thread screw</li>
<li>Installed power metering module - measures: voltage/frequency/current/wattage and total kWh for each project</li>
<li>Installed new all metal hotend that allows higher temperature rated thermocouple</li>
<li>Installed higher wattage hotend heating cartridge</li>
<li>Installed 24 volt cable to supply power to filament dryer</li></ol>


<p><u>Bottlenecks:</u><br><br>Some problems came up with dual Z axis and thread pitch change.</p>
<ol><li>Adjusting for the new thread pitch was easy - just increase the steps to 1600steps/mm and print/measure calibration cube then reconfigure.</li>
    <li>Had issues with binding/grinding/squealing from the rods getting caught up in the mounts which were resolved with the following (order of importance)</li>
<ol>
    <li>increased the Z motor amperage from the default to ~1 amp - this was the first thing I figured which restored my hope in the project. This increase binding but fixed the issue with only one Z stepper turning</li>
    <li>loosened the screws holding screw nut to the x axis which allowed the threaded rod some up/down play in the y axis. Eliminated binding.</li>
    <li>lots of dry lube. Decreased squealing.</li>
    <li>Installed flexible shaft couplings to the rods. Decreased the chance of binding.</li>
</ol></ol>
One thing to consider when replacing the heating cartridge with a higher wattage is running PID tuning then reconfigure with those results.


<p>The modeling took about 6 hours to do but I procrastinated. Once I moved from having a 2D sketch to having a 3D outline of the bottom I knocked out the rest of the project of the next couple of weeks - modeling and test printing.</p>
<p>Both the Dual Z and the slower pitch threaded rod greatly improved my tall prints. I think this is mostly because of the increased Z precision from the 1600 steps per mm rather than 400 I had previously.</p>
<table>
<thead>
<tr>
<th><img src="/2023/10/26/Upgrade-Repair-Ender-3/side.jpg" class=""></th>
<th><img src="/2023/10/26/Upgrade-Repair-Ender-3/grounding.jpg" class=""></th>
<th><img src="/2023/10/26/Upgrade-Repair-Ender-3/side2.jpg" class=""></th>
</tr>
</thead>
<tbody><tr>
<td><img src="/2023/10/26/Upgrade-Repair-Ender-3/top.jpg" class=""></td>
<td><img src="/2023/10/26/Upgrade-Repair-Ender-3/secondZ.jpg" class=""></td>
<td><img src="/2023/10/26/Upgrade-Repair-Ender-3/back.jpg" class=""></td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>fusion360</tag>
        <tag>3dmodeling</tag>
        <tag>ender3</tag>
        <tag>3dprinting</tag>
      </tags>
  </entry>
</search>
